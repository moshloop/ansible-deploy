- debug: msg="Deploying {{inventory_hostname}} to {{target}}"
- set_fact:
    sysctls: "{{ sysctls | default({}) }}"
    files: "{{ files | default({}) }}"
    templates: "{{ templates | default({}) }}"
    mounts: "{{ mounts | default({}) }}"
    environment: "{{ environment | default({}) }}"
    env_vars: "{{ env_vars | default({}) }}"
    domain: "{{ domain | default('local') }}"
    # internal_domain: "{{ internal_domain | default(domain) | default('local')}}"

- file:
    path: build
    state: directory
  delegate_to: localhost
  tags:
    - always
  run_once: true


- add_host:
    name: "{{inventory_hostname}}"
    groups: "{{target}}"
  changed_when: false

- name: Running before (run_once) hooks {{hooks}}
  include_tasks: '{{item}}'
  vars:
    include_dir: "{{item | dirname }}"
  run_once: true
  with_items: "{{hooks | deploy_hooks('before', True, group_names) }}"

- name: Running before hooks
  vars:
    include_dir: "{{item | dirname }}"
  include_tasks: '{{item}}'
  with_items: "{{hooks | deploy_hooks('before', False, group_names) }}"

- include: parse_docker_compose_v3.yml
  with_items: "{{docker_compose_v3}}"

- set_fact:
    _containers: []
- include: container_defaults.yml
  loop: "{{containers}}"
  loop_control:
    loop_var: container

- set_fact:
    containers: "{{_containers}}"

- debug: msg="{{role_path}}" verbosity=1

- include_role: name="{{role_path}}/roles/ssh"
  when: target == 'ansible' or target == 'ssh'

- block:
    - include_role: name="{{role_path}}/roles/ecs"
  when: target == 'ecs'
  connection: local
  run_once: true

- block:
    - include_role: name="{{role_path}}/roles/k8s"
  when: target == 'k8s' or target == 'kubernetes'
  connection: local
  run_once: true

- block:
    - include_role: name="{{role_path}}/roles/cloudinit"
  when: target == 'cloudinit'
  connection: local

- name: Running after hooks
  include: '{{item}}'
  vars:
    include_dir: "{{item | dirname }}"
  with_items: "{{hooks | deploy_hooks('after', False, group_names) }}"

- name: Running after (run_once) hooks
  vars:
    include_dir: "{{item | dirname }}"
  include: '{{item}}'
  with_items: "{{hooks | deploy_hooks('after', True, group_names) }}"

