{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started Opionated role for creating shortcuts for various ansible tasks Targets Ansible (Default) Option Description Support files Map of files to copy native copy module templates Map of templates to render native template module containers List of containers to exectute docker_systemd_service role commands List of commands to execute. native shell module mounts Map of NFS mounts native fstab module sysctls Sysctl variables to set native sysctl module env_vars Environment variables to set /etc/environment Cloud Init Option Description Support files Map of files to copy \u231b templates Map of templates to render \u231b containers List of containers to exectute \u231b commands List of commands to execute. \u231b mounts Map of NFS mounts \u231b sysctls Sysctl variables to set \u231b env_vars Environment variables to set \u231b AWS ECS Option Description Support files Map of files to copy \u231b templates Map of templates to render \u231b containers List of containers to exectute \u231b commands List of commands to execute. \u231b mounts Map of NFS mounts \u231b sysctls Sysctl variables to set \u231b env_vars Environment variables to set \u231b Docker Swarm Option Description Support files Map of files to copy \u231b templates Map of templates to render \u231b containers List of containers to exectute \u231b commands List of commands to execute. \u231b mounts Map of NFS mounts \u231b sysctls Sysctl variables to set \u231b env_vars Environment variables to set \u231b Kubernetes Option Description Support files Map of files to copy \u231b templates Map of templates to render \u231b containers List of containers to exectute \u231b commands List of commands to execute. \u231b mounts Map of NFS mounts \u231b sysctls Sysctl variables to set \u231b env_vars Environment variables to set \u231b","title":"Getting Started"},{"location":"#getting-started","text":"Opionated role for creating shortcuts for various ansible tasks","title":"Getting Started"},{"location":"#targets","text":"","title":"Targets"},{"location":"#ansible-default","text":"Option Description Support files Map of files to copy native copy module templates Map of templates to render native template module containers List of containers to exectute docker_systemd_service role commands List of commands to execute. native shell module mounts Map of NFS mounts native fstab module sysctls Sysctl variables to set native sysctl module env_vars Environment variables to set /etc/environment","title":"  Ansible (Default)"},{"location":"#cloud-init","text":"Option Description Support files Map of files to copy \u231b templates Map of templates to render \u231b containers List of containers to exectute \u231b commands List of commands to execute. \u231b mounts Map of NFS mounts \u231b sysctls Sysctl variables to set \u231b env_vars Environment variables to set \u231b","title":"  Cloud Init"},{"location":"#aws-ecs","text":"Option Description Support files Map of files to copy \u231b templates Map of templates to render \u231b containers List of containers to exectute \u231b commands List of commands to execute. \u231b mounts Map of NFS mounts \u231b sysctls Sysctl variables to set \u231b env_vars Environment variables to set \u231b","title":"  AWS ECS"},{"location":"#docker-swarm","text":"Option Description Support files Map of files to copy \u231b templates Map of templates to render \u231b containers List of containers to exectute \u231b commands List of commands to execute. \u231b mounts Map of NFS mounts \u231b sysctls Sysctl variables to set \u231b env_vars Environment variables to set \u231b","title":"  Docker Swarm"},{"location":"#kubernetes","text":"Option Description Support files Map of files to copy \u231b templates Map of templates to render \u231b containers List of containers to exectute \u231b commands List of commands to execute. \u231b mounts Map of NFS mounts \u231b sysctls Sysctl variables to set \u231b env_vars Environment variables to set \u231b","title":"  Kubernetes"},{"location":"ansible-addons/","text":"Ansible Role for creating systemd services, for managing existing services use the built-in systemd module. Filters name description file_exists (path) dir_exists (path) jsonpath (data) transforms data using jsonpath_rw nestedelement (path) Returns an nested element from an object tree by path (seperated by / or .) play_groups (play_hosts, groups, hostvars) Returns a list of groups that are active within a play split (string, separator=' ') to_map (map, key, value) walk_up (object, path) Walks up an object tree from the lowest level collecting all attributes not available at lower levels map_to_entries (dict, key, value) Convert a dict into a list of entries Modules cloudinit_iso 1 2 3 4 5 6 7 8 - cloudinit_iso : dest : \"{{playbook_dir}}/cloudinit.iso\" user : | #cloud-config preserve_hostname: true hostname: ansible-hostname users: - name: hostname Note cloudinit_iso requires the genisoimage package to be installed. systemd_service Options 1 2 3 4 5 6 7 8 9 10 11 OPTIONS (= is mandatory): = ExecStart = Name - Description - InstallArgs - RestartOn [Default: on-failure] - RunAs [Default: root] - ServiceArgs - UnitArgs - WantedBy [Default: multi-user.target] - state (Choices: present, absent)[Default: present] EXAMPLES 1 2 3 4 5 6 7 8 9 10 11 12 - hosts : all roles : - moshloop.systemd tasks : - systemd_service : Name : test ExecStart : \"/usr/bin/nc -l 200\" - systemd_service : Name : test ExecStart : \"/usr/bin/nc -l 200\" UnitArgs : After : networking.service","title":"Ansible addons"},{"location":"ansible-addons/#filters","text":"name description file_exists (path) dir_exists (path) jsonpath (data) transforms data using jsonpath_rw nestedelement (path) Returns an nested element from an object tree by path (seperated by / or .) play_groups (play_hosts, groups, hostvars) Returns a list of groups that are active within a play split (string, separator=' ') to_map (map, key, value) walk_up (object, path) Walks up an object tree from the lowest level collecting all attributes not available at lower levels map_to_entries (dict, key, value) Convert a dict into a list of entries","title":"Filters"},{"location":"ansible-addons/#modules","text":"","title":"Modules"},{"location":"ansible-addons/#cloudinit_iso","text":"1 2 3 4 5 6 7 8 - cloudinit_iso : dest : \"{{playbook_dir}}/cloudinit.iso\" user : | #cloud-config preserve_hostname: true hostname: ansible-hostname users: - name: hostname Note cloudinit_iso requires the genisoimage package to be installed.","title":"cloudinit_iso"},{"location":"ansible-addons/#systemd_service","text":"Options 1 2 3 4 5 6 7 8 9 10 11 OPTIONS (= is mandatory): = ExecStart = Name - Description - InstallArgs - RestartOn [Default: on-failure] - RunAs [Default: root] - ServiceArgs - UnitArgs - WantedBy [Default: multi-user.target] - state (Choices: present, absent)[Default: present] EXAMPLES 1 2 3 4 5 6 7 8 9 10 11 12 - hosts : all roles : - moshloop.systemd tasks : - systemd_service : Name : test ExecStart : \"/usr/bin/nc -l 200\" - systemd_service : Name : test ExecStart : \"/usr/bin/nc -l 200\" UnitArgs : After : networking.service","title":"systemd_service"},{"location":"bootstrapping/","text":"Bootstrapping Name Default Description ssh_key_user ec2-user The name of the preconfigured user in the image ssh_key_full The SSH public key to install as an authorized key for ssh_key_user git_repo git_branch master git_path /etc/repository git_account Optional: The AWS account that git_repo is hosted in git_role Optional: An IAM role in git_account that has codecommit permissions on git_repo phone_home A bash snippet that gets executed at the end of bootstrapping - e.g. To execute an initial Ansible Tower playbook run A cloud-init file is specified on launch that provides: Inserts the ssh_key_full public key into the ssh_key_user 's authorized_keys file Formats and mounts any volumes that have mount params and adds them into /etc/fstab Updates the hostname Updates /etc/environment with the role, purpose, purposeId, environment, region, domain, ami values Configures git to use the git_account/git_role IAM role for AWS CodeCommit checkouts (if specified) Clones git_repo to git_path and installs any git hooks in the .hooks directory and execute the post-merge hook. Installs a systemd service and timer git-sync that keeps the git repo in sync. Executes the script specified in phone_home","title":"Bootstrapping"},{"location":"bootstrapping/#bootstrapping","text":"Name Default Description ssh_key_user ec2-user The name of the preconfigured user in the image ssh_key_full The SSH public key to install as an authorized key for ssh_key_user git_repo git_branch master git_path /etc/repository git_account Optional: The AWS account that git_repo is hosted in git_role Optional: An IAM role in git_account that has codecommit permissions on git_repo phone_home A bash snippet that gets executed at the end of bootstrapping - e.g. To execute an initial Ansible Tower playbook run A cloud-init file is specified on launch that provides: Inserts the ssh_key_full public key into the ssh_key_user 's authorized_keys file Formats and mounts any volumes that have mount params and adds them into /etc/fstab Updates the hostname Updates /etc/environment with the role, purpose, purposeId, environment, region, domain, ami values Configures git to use the git_account/git_role IAM role for AWS CodeCommit checkouts (if specified) Clones git_repo to git_path and installs any git hooks in the .hooks directory and execute the post-merge hook. Installs a systemd service and timer git-sync that keeps the git repo in sync. Executes the script specified in phone_home","title":"Bootstrapping"},{"location":"commands/","text":"commands 1 2 commands : - echo 123 cancel Shorthand for shell command Shorthand for shell command Shorthand runcmd per instance command Shorthand for an initContainer sidecar Shorthand for shell command","title":"Commands"},{"location":"commands/#commands","text":"1 2 commands : - echo 123 cancel Shorthand for shell command Shorthand for shell command Shorthand runcmd per instance command Shorthand for an initContainer sidecar Shorthand for shell command","title":"commands"},{"location":"containers/","text":"An ansible role that runs a container using docker as a systemd service Arguments Argument Default Description image [Required] Docker image to run service [Required] The name of the systemd service env A dictionary of environment variables to pass through docker_args Additional arguments to the docker client e.g. -p 8080:8080 docker_opts Additional options to the docker client e.g. -H unix:///tmp/var/run/docker.sock args Additional arguments to the container volumes Js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 - hosts: localhost. roles: - moshloop.systemd. tasks: - include_role: name=moshloop.docker_systemd_service vars: containers: - image: nginx service: nginx env: DOMAIN: localhost.com - image: nginx service: nginx 2 docker_args: -p 8080 : 80 1 2 3 4 5 6 7 8 9 10 11 12 13 14 - hosts : localhost roles : - moshloop.systemd tasks : - include_role : name=moshloop.docker_systemd_service vars : containers : - image : nginx service : nginx env : DOMAIN : localhost.com - image : nginx service : nginx2 docker_args : -p 8080:80 AWS EC2 Docker Swarm Kubernetes","title":"Containers"},{"location":"containers/#arguments","text":"Argument Default Description image [Required] Docker image to run service [Required] The name of the systemd service env A dictionary of environment variables to pass through docker_args Additional arguments to the docker client e.g. -p 8080:8080 docker_opts Additional options to the docker client e.g. -H unix:///tmp/var/run/docker.sock args Additional arguments to the container volumes Js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 - hosts: localhost. roles: - moshloop.systemd. tasks: - include_role: name=moshloop.docker_systemd_service vars: containers: - image: nginx service: nginx env: DOMAIN: localhost.com - image: nginx service: nginx 2 docker_args: -p 8080 : 80 1 2 3 4 5 6 7 8 9 10 11 12 13 14 - hosts : localhost roles : - moshloop.systemd tasks : - include_role : name=moshloop.docker_systemd_service vars : containers : - image : nginx service : nginx env : DOMAIN : localhost.com - image : nginx service : nginx2 docker_args : -p 8080:80","title":"Arguments"},{"location":"containers/#aws-ec2","text":"","title":"AWS EC2"},{"location":"containers/#docker-swarm","text":"","title":"Docker Swarm"},{"location":"containers/#kubernetes","text":"","title":"Kubernetes"},{"location":"environment/","text":"","title":"Environment"},{"location":"hooks/","text":"group vars / tasks Automatically imports vault and variables files group tasks Checks for and runs custom tasks for each group, by dynamically include a task list based on group names. e.g. group_names == 'web,prod' will look for and run web.yml and prod.yml in the same directory as the playbook","title":"Hooks"},{"location":"hooks/#group-vars-tasks","text":"Automatically imports vault and variables files","title":"group vars / tasks"},{"location":"hooks/#group-tasks","text":"Checks for and runs custom tasks for each group, by dynamically include a task list based on group names. e.g. group_names == 'web,prod' will look for and run web.yml and prod.yml in the same directory as the playbook","title":"group tasks"},{"location":"load-balancing/","text":"Loadbalancers 1 2 elb : - {} Name Default Description port type http http,https,tcp check {port}/ alb false Create a Application Load Balancer instead of classic checkPath / ALB only: checkPort {port} ALB only: checkType {type} ALB only: code 200 ALB only sslId {default_ssl_arn} alias {group_name} security_group scheme internal","title":"Load balancing"},{"location":"load-balancing/#loadbalancers","text":"1 2 elb : - {} Name Default Description port type http http,https,tcp check {port}/ alb false Create a Application Load Balancer instead of classic checkPath / ALB only: checkPort {port} ALB only: checkType {type} ALB only: code 200 ALB only sslId {default_ssl_arn} alias {group_name} security_group scheme internal","title":"Loadbalancers"},{"location":"storage/","text":"Storage mounts 1 2 mounts : \"/mnt/point\" : \"nfserver:/volume\" Volumes 1 2 volumes : - {} Name Default Description size Size in GB of the volume id The name of the volume e.g. volume it will be used as suffix dev The unique device path to use e.g. /dev/xvf , host:/nfs_mount type gp2 format Optional: Partition type e.g. xfs , lvm , nfs mount Optional: Mount point for the volume e.g. /mnt/volume Instance Volume 1 2 instance_volumes : - {} Name Default Description dev format mount","title":"Storage"},{"location":"storage/#storage","text":"","title":"Storage"},{"location":"storage/#mounts","text":"1 2 mounts : \"/mnt/point\" : \"nfserver:/volume\"","title":"mounts"},{"location":"storage/#volumes","text":"1 2 volumes : - {} Name Default Description size Size in GB of the volume id The name of the volume e.g. volume it will be used as suffix dev The unique device path to use e.g. /dev/xvf , host:/nfs_mount type gp2 format Optional: Partition type e.g. xfs , lvm , nfs mount Optional: Mount point for the volume e.g. /mnt/volume","title":"Volumes"},{"location":"storage/#instance-volume","text":"1 2 instance_volumes : - {} Name Default Description dev format mount","title":"Instance Volume"},{"location":"systctl/","text":"sysctl 1 2 sysctls : \"vm.max_map_count\" : 262144","title":"Systctl"},{"location":"systctl/#sysctl","text":"1 2 sysctls : \"vm.max_map_count\" : 262144","title":"sysctl"},{"location":"systemd/","text":"","title":"Systemd"},{"location":"targets/","text":"Ansible (Default) Cloud Init AWS ECS Docker Swarm Kubernetes","title":"Targets"},{"location":"targets/#ansible-default","text":"","title":"  Ansible (Default)"},{"location":"targets/#cloud-init","text":"","title":"  Cloud Init"},{"location":"targets/#aws-ecs","text":"","title":"  AWS ECS"},{"location":"targets/#docker-swarm","text":"","title":"  Docker Swarm"},{"location":"targets/#kubernetes","text":"","title":"  Kubernetes"},{"location":"template/","text":"Files & Templates files 1 2 3 files : /etc/some/file : file /etc/some/file2 : file2 templates 1 2 3 templates : /etc/some/file : file /etc/some/file2 : file2","title":"Files & Templates"},{"location":"template/#files-templates","text":"","title":"Files &amp; Templates"},{"location":"template/#files","text":"1 2 3 files : /etc/some/file : file /etc/some/file2 : file2","title":"files"},{"location":"template/#templates","text":"1 2 3 templates : /etc/some/file : file /etc/some/file2 : file2","title":"templates"},{"location":"commands/ansible-run/","text":"ansible-run A wrapper that runs ansible in a docker container to eliminate python dependency hell, bundles the dependencies needed for the following modules: aws azure vmware bigip panos win ansible-run 1 2 3 pip install ansible-run ansible-run # drop into a shell with ansible and friends pre-installed Environment Variables: AWS_* environment variables Volumes: /ssh (for use with whilp/ssh-agent ) /var/run/docker.sock (so that docker can talk to itself) ~/.aws ~/.ansible /work $PWD","title":"ansible-run"},{"location":"commands/ansible-run/#ansible-run","text":"A wrapper that runs ansible in a docker container to eliminate python dependency hell, bundles the dependencies needed for the following modules: aws azure vmware bigip panos win","title":"ansible-run"},{"location":"commands/ansible-run/#ansible-run_1","text":"1 2 3 pip install ansible-run ansible-run # drop into a shell with ansible and friends pre-installed Environment Variables: AWS_* environment variables Volumes: /ssh (for use with whilp/ssh-agent ) /var/run/docker.sock (so that docker can talk to itself) ~/.aws ~/.ansible /work $PWD","title":"ansible-run"},{"location":"commands/ansible-test/","text":"ansible-test ansible-test will test a playbook using a docker container: 1 2 ansible-test playbook.yml # defaults to centos7 image = ubuntu1804 ansible-test playbook.yml The playbook will be tested for idempotency by running it a 2nd time and ensuring nothing is marked as changed, disable it with: 1 idempotency = false ansible-test playbook.yml Once the playbook is run any InSpec (.rb) or bats (.bats) tests found with the same name (e.g. playbook.rb ) will be executed. See it in action here","title":"ansible-test"},{"location":"commands/ansible-test/#ansible-test","text":"ansible-test will test a playbook using a docker container: 1 2 ansible-test playbook.yml # defaults to centos7 image = ubuntu1804 ansible-test playbook.yml The playbook will be tested for idempotency by running it a 2nd time and ensuring nothing is marked as changed, disable it with: 1 idempotency = false ansible-test playbook.yml Once the playbook is run any InSpec (.rb) or bats (.bats) tests found with the same name (e.g. playbook.rb ) will be executed. See it in action here","title":"ansible-test"},{"location":"commands/other/","text":"whilp/ssh-agent 1 2 docker run -u 1001 --rm -d -v ssh:/ssh --name = ssh-agent whilp/ssh-agent:latest docker run -u 1001 --rm -v ssh:/ssh -v $HOME : $HOME -it whilp/ssh-agent:latest ssh-add $HOME /.ssh/id_rsa ansible-role 1 ansible-role moshloop.java # cross-platform install of java ansible-vault-run ansible-vault-run will decrypt a vault and run a script with the variables exported as environment variables echo \"Decrypts an ansible-vault and runs script with the contents as environment variables\" 1 ansible-vault-run vault \"echo \\$password\"","title":"Other"},{"location":"commands/other/#whilpssh-agent","text":"1 2 docker run -u 1001 --rm -d -v ssh:/ssh --name = ssh-agent whilp/ssh-agent:latest docker run -u 1001 --rm -v ssh:/ssh -v $HOME : $HOME -it whilp/ssh-agent:latest ssh-add $HOME /.ssh/id_rsa","title":"whilp/ssh-agent"},{"location":"commands/other/#ansible-role","text":"1 ansible-role moshloop.java # cross-platform install of java","title":"ansible-role"},{"location":"commands/other/#ansible-vault-run","text":"ansible-vault-run will decrypt a vault and run a script with the variables exported as environment variables echo \"Decrypts an ansible-vault and runs script with the contents as environment variables\" 1 ansible-vault-run vault \"echo \\$password\"","title":"ansible-vault-run"}]}